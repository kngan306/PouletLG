@model WebLego.DataSet.GdrService.HomeBanner
@{
    ViewData["Title"] = "Thêm Banner Mới";
}

<div class="container-fluid py-4">
    <div class="card shadow-sm">
        <div class="card-body">
            <!-- Error Message -->
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Đóng thông báo lỗi"></button>
                </div>
            }

            <form asp-action="Create" enctype="multipart/form-data">
                @Html.AntiForgeryToken()
                <div asp-validation-summary="All" class="text-danger mb-4 alert alert-danger alert-dismissible fade show" role="alert" style="@(ViewData.ModelState.IsValid ? "display: none;" : "")">
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Đóng thông báo lỗi"></button>
                </div>

                <div class="row g-3">
                    <!-- Ảnh Banner -->
                    <div class="col-12">
                        <label class="form-label fw-semibold">Ảnh Banner</label>
                        <input type="file" name="imageFile" id="imageFile" class="form-control" required accept="image/jpeg,image/png,image/gif" aria-describedby="imageFileHelp" />
                        <small id="imageFileHelp" class="form-text text-muted">Chọn file ảnh (JPEG, PNG, GIF). Kích thước tối đa đề xuất: 1920x1080px.</small>
                        <img id="imagePreview" src="" alt="Xem trước ảnh banner" class="img-fluid rounded shadow-sm mt-2" style="max-width: 400px; max-height: 200px; object-fit: cover; display: none;" />
                        <span class="text-danger" asp-validation-for="ImageUrl"></span>
                    </div>

                    <!-- Trạng thái -->
                    <div class="col-12">
                        <label class="form-label fw-semibold">Trạng thái</label>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="IsActive" id="isActiveTrue" value="true" checked aria-label="Banner hoạt động" />
                            <label class="form-check-label" for="isActiveTrue">Hoạt động</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="IsActive" id="isActiveFalse" value="false" aria-label="Banner không hoạt động" />
                            <label class="form-check-label" for="isActiveFalse">Không hoạt động</label>
                        </div>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="mt-4 d-flex gap-2">
                    <button type="submit" class="btn btn-primary shadow-sm">
                        <i class="bi bi-save me-2"></i>Thêm
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary shadow-sm">
                        <i class="bi bi-arrow-left me-2"></i>Hủy
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const imageFileInput = document.getElementById('imageFile');
            const imagePreview = document.getElementById('imagePreview');

            imageFileInput.addEventListener('change', (event) => {
                const file = event.target.files[0];
                if (file) {
                    if (!['image/jpeg', 'image/png', 'image/gif'].includes(file.type)) {
                        alert('Vui lòng chọn file ảnh định dạng JPEG, PNG hoặc GIF.');
                        imageFileInput.value = '';
                        imagePreview.style.display = 'none';
                        return;
                    }
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        imagePreview.src = e.target.result;
                        imagePreview.style.display = 'block';
                    };
                    reader.onerror = () => {
                        alert('Lỗi khi đọc file ảnh.');
                        imagePreview.style.display = 'none';
                    };
                    reader.readAsDataURL(file);
                } else {
                    imagePreview.style.display = 'none';
                }
            });
        });
    </script>
    <style>
        .card {
            border-radius: 0.5rem;
        }

        .form-control, .btn {
            border-radius: 0.375rem;
        }

        .form-label {
            margin-bottom: 0.25rem;
            font-size: 0.9rem;
        }

        .form-text {
            font-size: 0.85rem;
        }

        .img-fluid {
            border-radius: 0.25rem;
        }

        .alert-dismissible {
            border-radius: 0.375rem;
        }
    </style>
}