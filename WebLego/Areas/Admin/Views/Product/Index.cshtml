@model WebLego.Areas.Admin.Models.ProductViewModel

@{
    ViewData["Title"] = "Quản lý sản phẩm";
    var roleId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value ?? "0");
}

@if (TempData["BulkError"] != null)
{
    <div class="alert alert-warning">@TempData["BulkError"]</div>
}

<div class="card mb-4">
    <div class="card-header bg-light fw-bold">
        Tìm kiếm sản phẩm
    </div>
    <div class="card-body">
        <form asp-action="Index" method="get" class="row gx-3 gy-2 align-items-end">
            <div class="col-md-5">
                <label for="filterName" class="form-label">Tên sản phẩm</label>
                <input type="text" id="filterName" name="filterName"
                       value="@Model.FilterName" class="form-control" />
            </div>
            <div class="col-md-4">
                <label for="filterCategoryId" class="form-label">Danh mục</label>
                <select id="filterCategoryId" name="filterCategoryId" class="form-select">
                    <option value="">-- Tất cả danh mục --</option>
                    @foreach (var c in Model.Categories)
                    {
                        if (Model.FilterCategoryId == c.CategoryId)
                        {
                            <option value="@c.CategoryId" selected>@c.CategoryName</option>
                        }
                        else
                        {
                            <option value="@c.CategoryId">@c.CategoryName</option>
                        }
                    }
                </select>

            </div>
            <div class="col-md-3 text-end">
                <button type="submit" class="btn btn-primary me-2">
                    <i class="bi bi-search"></i> Tìm kiếm
                </button>
                <a asp-action="Index" class="btn btn-outline-secondary">Đặt lại</a>
            </div>
        </form>
    </div>
</div>

<div class="d-flex justify-content-between align-items-center mb-3">
    @if (roleId == 3)
    {
        <a asp-action="Create" class="btn btn-warning text-dark">
            <i class="bi bi-plus-circle"></i> Tạo mới
        </a>
    }

    @if (roleId == 3)
    {
        <div class="d-flex align-items-center">
            <span id="selectedCountLabel" class="me-3 text-secondary">(0) Dòng được chọn</span>
            <button id="btnDeleteSelected"
                    type="button"
                    class="btn btn-danger"
                    data-bs-toggle="modal"
                    data-bs-target="#confirmBulkDelete"
                    disabled>
                <i class="bi bi-trash"></i> Xóa
            </button>
        </div>
    }
</div>

<form id="bulkDeleteForm" asp-action="DeleteSelected" method="post">
    @Html.AntiForgeryToken()
    <table class="table table-striped table-hover align-middle">
        <thead class="table-light">
            <tr>
                <th style="width:40px;">
                    @if (roleId == 3)
                    {
                        <input type="checkbox" id="selectAll" />
                    }
                </th>
                <th style="width:60px;">STT</th>
                <th>Tên sản phẩm</th>
                <th>Danh mục</th>
                <th>Giá bán</th>
                <th>Giá KM</th>
                <th>Trạng thái</th>
                <th>Sản phẩm nổi bật</th>
                <th style="width:120px;">Hành động</th>
            </tr>
        </thead>
        <tbody>
            @{
                var sttStart = (Model.Page - 1) * Model.PageSize;
            }
            @for (int i = 0; i < Model.Products.Count; i++)
            {
                var item = Model.Products[i];
                <tr>
                    <td>
                        @if (roleId == 3)
                        {
                            <input type="checkbox" class="row-checkbox form-check-input" name="selectedIds" value="@item.ProductId" />
                        }
                    </td>
                    <td>@(sttStart + i + 1)</td>
                    <td>@item.ProductName</td>
                    <td>@item.Category?.CategoryName</td>
                    <td>@item.Price.ToString("N0") đ</td>
                    <td>@(item.DiscountPrice.HasValue ? item.DiscountPrice.Value.ToString("N0") + " đ" : "-")</td>
                    <td>@item.ProductStatus</td>
                    <td>
                        @if (item.IsFeatured ?? false)
                        {
                            <span class="badge bg-success">Có</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Không</span>
                        }
                    </td>
                    <td>
                        <a asp-action="Edit"
                           asp-route-id="@item.ProductId"
                           class="btn btn-sm btn-outline-primary"
                           title="@(roleId == 3 ? "Sửa" : "Xem chi tiết")">
                            @if (roleId == 3)
                            {
                                <i class="bi bi-pencil"></i>
                            }
                            else
                            {
                                <i class="bi bi-eye"></i>
                            }
                        </a>
                        @if (roleId == 3)
                        {
                            <button type="button"
                                    class="btn btn-sm btn-outline-danger ms-1"
                                    title="Xóa"
                                    onclick="showSingleDeleteModal(@item.ProductId)">
                                <i class="bi bi-trash"></i>
                            </button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</form>

@{
    var totalPages = (Model.TotalItems + Model.PageSize - 1) / Model.PageSize;
}
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.Page == 1 ? "disabled" : "")">
            <a class="page-link"
               asp-action="Index"
               asp-route-page="@(Model.Page - 1)"
               asp-route-filterName="@Model.FilterName"
               asp-route-filterCategoryId="@Model.FilterCategoryId">
                « Trước
            </a>
        </li>
        @for (int p = 1; p <= totalPages; p++)
        {
            <li class="page-item @(p == Model.Page ? "active" : "")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-page="@p"
                   asp-route-filterName="@Model.FilterName"
                   asp-route-filterCategoryId="@Model.FilterCategoryId">
                    @p
                </a>
            </li>
        }
        <li class="page-item @(Model.Page >= totalPages ? "disabled" : "")">
            <a class="page-link"
               asp-action="Index"
               asp-route-page="@(Model.Page + 1)"
               asp-route-filterName="@Model.FilterName"
               asp-route-filterCategoryId="@Model.FilterCategoryId">
                Sau »
            </a>
        </li>
    </ul>
</nav>

<!-- Modal xác nhận xóa nhiều -->
<div class="modal fade" id="confirmBulkDelete" tabindex="-1" aria-labelledby="bulkDeleteLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xác nhận</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc muốn xóa
                <strong><span id="selectedCountModal">0</span></strong>
                mục này?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Hủy</button>
                <button type="button" id="confirmBulkBtn" class="btn btn-danger btn-sm">Xóa</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal xác nhận xóa từng sản phẩm -->
<div class="modal fade" id="confirmSingleDelete" tabindex="-1" aria-labelledby="singleDeleteLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc muốn xóa sản phẩm này?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger btn-sm" id="confirmSingleBtn">Xóa</button>
            </div>
        </div>
    </div>
</div>

<!-- Form ẩn để xóa từng dòng -->
<form id="singleDeleteForm" asp-action="Delete" method="post">
    @Html.AntiForgeryToken()
    <input type="hidden" name="id" id="singleDeleteId" />
</form>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const selectAll = document.getElementById('selectAll');
            const rows = document.querySelectorAll('.row-checkbox');
            const btnDelete = document.getElementById('btnDeleteSelected');
            const countLabel = document.getElementById('selectedCountLabel');
            const countLabelModal = document.getElementById('selectedCountModal');
            const confirmBulkBtn = document.getElementById('confirmBulkBtn');
            const bulkForm = document.getElementById('bulkDeleteForm');

            function updateCount() {
                const c = document.querySelectorAll('.row-checkbox:checked').length;
                countLabel.textContent = `(${c}) Dòng được chọn`;
                countLabelModal.textContent = c;
                btnDelete.disabled = c === 0;
            }

            if (selectAll) {
                selectAll.addEventListener('change', e => {
                    rows.forEach(r => r.checked = e.target.checked);
                    updateCount();
                });
            }

            rows.forEach(r => r.addEventListener('change', updateCount));
            confirmBulkBtn.addEventListener('click', () => bulkForm.submit());
        });

        // Xử lý popup xác nhận xóa từng dòng
        let categoryIdToDelete = 0;
        function showSingleDeleteModal(id) {
            categoryIdToDelete = id;
            var modal = new bootstrap.Modal(document.getElementById('confirmSingleDelete'));
            modal.show();
        }

        document.getElementById('confirmSingleBtn').addEventListener('click', function () {
            document.getElementById('singleDeleteId').value = categoryIdToDelete;
            document.getElementById('singleDeleteForm').submit();
        });
    </script>
}
