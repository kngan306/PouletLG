@model WebLego.Areas.Admin.Models.PromotionViewModel
@{
    ViewData["Title"] = "Chi tiết / Sửa chương trình khuyến mãi";
    var roleId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value ?? "0");
    var isReadOnly = roleId == 2;
    var categories = isReadOnly ? new List<string>() : Model.AvailableProducts.Select(p => p.Category?.CategoryName).Distinct().Where(c => !string.IsNullOrEmpty(c)).ToList();
}

<div class="container-fluid py-4">
    <div class="card shadow-sm">
        <div class="card-body">
            <form asp-action="Edit" asp-route-id="@Model.PromotionId" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="PromotionId" />
                <div asp-validation-summary="All" class="text-danger mb-4 alert alert-danger alert-dismissible fade show" role="alert" style="@(ViewData.ModelState.IsValid ? "display: none;" : "")">
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>

                <div class="row g-3">
                    <!-- Tên chương trình -->
                    <div class="col-md-6 col-sm-12">
                        <label asp-for="PromotionName" class="form-label fw-semibold">Tên chương trình</label>
                        <input asp-for="PromotionName" class="form-control @(isReadOnly ? "bg-light border-0" : "")" readonly="@isReadOnly" disabled="@isReadOnly" placeholder="Nhập tên chương trình" aria-describedby="promotionNameHelp" />
                        <span asp-validation-for="PromotionName" class="text-danger"></span>
                        <small id="promotionNameHelp" class="form-text text-muted">Tên chương trình khuyến mãi @(isReadOnly ? "không thể chỉnh sửa." : "nên ngắn gọn và rõ ràng.")</small>
                    </div>

                    <!-- Ngày bắt đầu -->
                    <div class="col-md-6 col-sm-12">
                        <label asp-for="StartDate" class="form-label fw-semibold">Ngày bắt đầu</label>
                        <input asp-for="StartDate" type="date" class="form-control @(isReadOnly ? "bg-light border-0" : "")" readonly="@isReadOnly" disabled="@isReadOnly" aria-describedby="startDateHelp" />
                        <span asp-validation-for="StartDate" class="text-danger"></span>
                        <small id="startDateHelp" class="form-text text-muted">Ngày bắt đầu chương trình khuyến mãi.</small>
                    </div>

                    <!-- Ngày kết thúc -->
                    <div class="col-md-6 col-sm-12">
                        <label asp-for="EndDate" class="form-label fw-semibold">Ngày kết thúc</label>
                        <input asp-for="EndDate" type="date" class="form-control @(isReadOnly ? "bg-light border-0" : "")" readonly="@isReadOnly" disabled="@isReadOnly" aria-describedby="endDateHelp" />
                        <span asp-validation-for="EndDate" class="text-danger"></span>
                        <small id="endDateHelp" class="form-text text-muted">Ngày kết thúc chương trình khuyến mãi.</small>
                    </div>

                    <!-- Phần trăm giảm giá -->
                    <div class="col-md-6 col-sm-12">
                        <label asp-for="DiscountPercent" class="form-label fw-semibold">Giảm (%)</label>
                        <input asp-for="DiscountPercent" type="number" step="0.01" min="0" max="100" class="form-control @(isReadOnly ? "bg-light border-0" : "")" readonly="@isReadOnly" disabled="@isReadOnly" placeholder="Nhập phần trăm giảm giá" aria-describedby="discountPercentHelp" />
                        <span asp-validation-for="DiscountPercent" class="text-danger"></span>
                        <small id="discountPercentHelp" class="form-text text-muted">Phần trăm giảm giá từ 0 đến 100.</small>
                    </div>

                    <!-- Trạng thái -->
                    <div class="col-md-6 col-sm-12">
                        <label asp-for="Status" class="form-label fw-semibold">Trạng thái hiện tại</label>
                        <input asp-for="Status" class="form-control bg-light border-0" readonly aria-describedby="statusHelp" />
                        <small id="statusHelp" class="form-text text-muted">Trạng thái được tự động cập nhật dựa trên ngày bắt đầu và kết thúc.</small>
                    </div>
                </div>

                <!-- Sản phẩm áp dụng -->
                <hr class="my-4" />
                <h4 class="fw-semibold mb-3">Sản phẩm áp dụng chương trình</h4>
                @if (isReadOnly)
                {
                    <div class="mb-3">
                        <input type="text" id="searchInput" class="form-control" placeholder="Nhập tên sản phẩm..." aria-label="Tìm kiếm sản phẩm" />
                    </div>
                    <div class="border rounded p-3 bg-light" style="max-height: 300px; overflow-y: auto;">
                        @if (Model.SelectedProductIds != null && Model.SelectedProductIds.Any())
                        {
                            @foreach (var p in Model.AvailableProducts.Where(p => Model.SelectedProductIds.Contains(p.ProductId)))
                            {
                                var category = p.Category?.CategoryName ?? "-";
                                <div class="mb-2 product-item" data-name="@p.ProductName.ToLower()">
                                    <strong class="text-truncate d-inline-block" style="max-width: 300px;" title="@p.ProductName">@p.ProductName</strong> (@p.Price.ToString("N0") đ)
                                    <small class="text-muted d-block">@category</small>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted mb-0">Không có sản phẩm áp dụng.</p>
                        }
                    </div>
                }
                else
                {
                    <div class="mb-3">
                        <div class="row g-2">
                            <div class="col-md-6 col-sm-12">
                                <input type="text" id="searchInput" class="form-control" placeholder="Nhập tên sản phẩm..." aria-label="Tìm kiếm sản phẩm" />
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <select id="categoryFilter" class="form-select" aria-label="Lọc theo danh mục">
                                    <option value="">-- Tất cả danh mục --</option>
                                    @foreach (var cat in categories)
                                    {
                                        <option value="@cat">@cat</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="selectAll" aria-label="Chọn tất cả sản phẩm" />
                        <label class="form-check-label fw-bold" for="selectAll">Chọn tất cả</label>
                    </div>
                    <div class="border rounded p-3 bg-light" style="max-height: 300px; overflow-y: auto;" id="productList">
                        @foreach (var p in Model.AvailableProducts)
                        {
                            var isChecked = Model.SelectedProductIds?.Contains(p.ProductId) == true;
                            var category = p.Category?.CategoryName ?? "-";
                            <div class="form-check product-item mb-2" data-name="@p.ProductName.ToLower()" data-category="@category">
                                <input class="form-check-input product-checkbox" type="checkbox" name="SelectedProductIds" value="@p.ProductId" id="prod_@p.ProductId" @(isChecked ? "checked" : "") aria-label="Chọn sản phẩm @p.ProductName" />
                                <label class="form-check-label" for="prod_@p.ProductId">
                                    <span class="text-truncate d-inline-block" style="max-width: 300px;" title="@p.ProductName">@p.ProductName</span> (@p.Price.ToString("N0") đ)
                                    <small class="text-muted d-block">@category</small>
                                </label>
                            </div>
                        }
                    </div>
                }

                <!-- Action Buttons -->
                <div class="mt-4 d-flex gap-2">
                    @if (!isReadOnly)
                    {
                        <button type="submit" class="btn btn-primary shadow-sm">
                            <i class="bi bi-save me-2"></i>Lưu thay đổi
                        </button>
                    }
                    <a asp-action="Index" class="btn btn-outline-secondary shadow-sm">
                        <i class="bi bi-arrow-left me-2"></i>Quay lại
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const searchInput = document.getElementById('searchInput');
            searchInput?.addEventListener('input', filterProducts);

        @if (!isReadOnly)
        {
            <text>
                        const categoryFilter = document.getElementById('categoryFilter');
                        const selectAll = document.getElementById('selectAll');
                        categoryFilter?.addEventListener('change', filterProducts);
                        selectAll?.addEventListener('change', () => {
                            const checkboxes = document.querySelectorAll('.product-checkbox');
                            checkboxes.forEach(cb => {
                                if (cb.closest('.product-item').style.display !== 'none') {
                                    cb.checked = selectAll.checked;
                                }
                            });
                        });
            </text>
        }

            function filterProducts() {
                const searchValue = searchInput.value.toLowerCase();
                const selectedCategory = document.getElementById('categoryFilter')?.value || '';
                const products = document.querySelectorAll('.product-item');

                products.forEach(item => {
                    const name = item.getAttribute('data-name');
                    const category = item.getAttribute('data-category') || '';
                    const matchName = name.includes(searchValue);
                    const matchCategory = selectedCategory === '' || category === selectedCategory;
                    item.style.display = matchName && matchCategory ? '' : 'none';
                });
            }
        });
    </script>
    <style>
        .card {
            border-radius: 0.5rem;
        }

        .form-control, .form-select, .btn {
            border-radius: 0.375rem;
        }

            .form-control[readonly], .form-control[disabled] {
                background-color: #f8f9fa !important;
                opacity: 1;
                cursor: not-allowed;
            }

        .form-label {
            margin-bottom: 0.25rem;
            font-size: 0.9rem;
        }

        .form-text {
            font-size: 0.85rem;
        }

        .border.rounded {
            border-color: #dee2e6 !important;
        }

        .text-truncate {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        
    </style>
}