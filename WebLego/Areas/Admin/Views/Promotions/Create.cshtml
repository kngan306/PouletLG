@model WebLego.Areas.Admin.Models.PromotionViewModel
@{
    ViewData["Title"] = "Tạo chương trình khuyến mãi";
}

<div class="container-fluid py-4">
    <div class="card shadow-sm">
        <div class="card-body">
            <!-- Validation Summary -->
            @if (!ViewData.ModelState.IsValid && ViewData.ModelState.Count > 0)
            {
                <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert">
                    <strong>Vui lòng kiểm tra lại các trường thông tin:</strong>
                    <ul class="mb-0">
                        @foreach (var entry in ViewData.ModelState)
                        {
                            var key = entry.Key;
                            foreach (var error in entry.Value.Errors)
                            {
                                <li>@(string.IsNullOrEmpty(key) ? "Lỗi chung" : key): @error.ErrorMessage</li>
                            }
                        }
                    </ul>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <form asp-action="Create" method="post">
                @Html.AntiForgeryToken()

                <div class="row g-3">
                    <!-- Tên chương trình -->
                    <div class="col-md-6 col-sm-12">
                        <label asp-for="PromotionName" class="form-label fw-semibold">Tên chương trình</label>
                        <input asp-for="PromotionName" class="form-control" placeholder="Nhập tên chương trình" aria-describedby="promotionNameHelp" autocomplete="off" />
                        <span asp-validation-for="PromotionName" class="text-danger"></span>
                        <small id="promotionNameHelp" class="form-text text-muted">Tên chương trình nên ngắn gọn và rõ ràng.</small>
                    </div>

                    <!-- Ngày bắt đầu -->
                    <div class="col-md-6 col-sm-12">
                        <label asp-for="StartDate" class="form-label fw-semibold">Ngày bắt đầu</label>
                        <input asp-for="StartDate" type="date" class="form-control" aria-describedby="startDateHelp" />
                        <span asp-validation-for="StartDate" class="text-danger"></span>
                        <small id="startDateHelp" class="form-text text-muted">Chọn ngày bắt đầu chương trình khuyến mãi.</small>
                    </div>

                    <!-- Ngày kết thúc -->
                    <div class="col-md-6 col-sm-12">
                        <label asp-for="EndDate" class="form-label fw-semibold">Ngày kết thúc</label>
                        <input asp-for="EndDate" type="date" class="form-control" aria-describedby="endDateHelp" />
                        <span asp-validation-for="EndDate" class="text-danger"></span>
                        <small id="endDateHelp" class="form-text text-muted">Chọn ngày kết thúc chương trình khuyến mãi.</small>
                    </div>

                    <!-- Phần trăm giảm giá -->
                    <div class="col-md-6 col-sm-12">
                        <label asp-for="DiscountPercent" class="form-label fw-semibold">Giảm (%)</label>
                        <input asp-for="DiscountPercent" type="number" step="0.01" min="0" max="100" class="form-control" placeholder="Nhập phần trăm giảm giá" aria-describedby="discountPercentHelp" />
                        <span asp-validation-for="DiscountPercent" class="text-danger"></span>
                        <small id="discountPercentHelp" class="form-text text-muted">Phần trăm giảm giá từ 0 đến 100.</small>
                    </div>
                </div>

                <!-- Sản phẩm áp dụng -->
                <hr class="my-4" />
                <h4 class="fw-semibold mb-3">Sản phẩm áp dụng chương trình</h4>
                <div class="row g-2 mb-3">
                    <div class="col-md-6 col-sm-12">
                        <label class="form-label fw-semibold">Tìm kiếm tên sản phẩm</label>
                        <input type="text" id="productSearch" class="form-control" placeholder="Nhập tên sản phẩm..." aria-label="Tìm kiếm sản phẩm" autocomplete="off" />
                    </div>
                    <div class="col-md-6 col-sm-12">
                        <label class="form-label fw-semibold">Lọc danh mục</label>
                        <select id="categoryFilter" class="form-select" aria-label="Lọc theo danh mục">
                            <option value="">-- Tất cả danh mục --</option>
                            @foreach (var cat in ViewBag.Categories as List<WebLego.DataSet.GdrService.Category>)
                            {
                                <option value="@cat.CategoryId">@cat.CategoryName</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="form-check mb-3">
                    <input class="form-check-input" type="checkbox" id="selectAllProducts" aria-label="Chọn tất cả sản phẩm" />
                    <label class="form-check-label fw-bold" for="selectAllProducts">Chọn tất cả</label>
                </div>
                <div class="border rounded p-3 bg-light" style="max-height: 250px; overflow-y: auto;" id="productList">
                    @if (Model.AvailableProducts != null && Model.AvailableProducts.Any())
                    {
                        foreach (var p in Model.AvailableProducts)
                        {
                            var isChecked = Model.SelectedProductIds?.Contains(p.ProductId) == true;
                            <div class="form-check product-item mb-2" data-name="@p.ProductName.ToLower()" data-category="@p.CategoryId">
                                <input class="form-check-input product-checkbox" type="checkbox" name="SelectedProductIds" value="@p.ProductId" id="prod_@p.ProductId" @(isChecked ? "checked" : "") aria-label="Chọn sản phẩm @p.ProductName" />
                                <label class="form-check-label" for="prod_@p.ProductId">
                                    <span class="text-truncate d-inline-block" style="max-width: 300px;" title="@p.ProductName">@p.ProductName</span> (@p.Price.ToString("N0") đ)
                                    <small class="text-muted d-block">@(p.Category?.CategoryName ?? "-")</small>
                                </label>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted mb-0">Không có sản phẩm nào khả dụng.</p>
                    }
                </div>

                <!-- Action Buttons -->
                <div class="mt-4 d-flex gap-2">
                    <button type="submit" class="btn btn-primary shadow-sm">
                        <i class="bi bi-save me-2"></i>Tạo chương trình
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary shadow-sm">
                        <i class="bi bi-arrow-left me-2"></i>Hủy
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const searchInput = document.getElementById('productSearch');
            const categoryFilter = document.getElementById('categoryFilter');
            const selectAll = document.getElementById('selectAllProducts');
            const productList = document.getElementById('productList');

            function filterProducts() {
                const searchValue = searchInput.value.toLowerCase();
                const selectedCategory = categoryFilter.value;
                const products = productList.querySelectorAll('.product-item');

                products.forEach(item => {
                    const name = item.getAttribute('data-name');
                    const category = item.getAttribute('data-category') || '';
                    const matchName = name.includes(searchValue);
                    const matchCategory = selectedCategory === '' || category === selectedCategory;
                    item.style.display = matchName && matchCategory ? '' : 'none';
                    if (!matchName || !matchCategory) {
                        item.querySelector('.product-checkbox').checked = false;
                    }
                });

                updateSelectAll();
            }

            function updateSelectAll() {
                const visibleCheckboxes = productList.querySelectorAll('.product-checkbox:not([style*="display: none"])');
                const checkedCheckboxes = productList.querySelectorAll('.product-checkbox:not([style*="display: none"]):checked');
                selectAll.checked = visibleCheckboxes.length > 0 && visibleCheckboxes.length === checkedCheckboxes.length;
            }

            searchInput.addEventListener('input', filterProducts);
            categoryFilter.addEventListener('change', filterProducts);
            selectAll.addEventListener('change', () => {
                const checkboxes = productList.querySelectorAll('.product-checkbox:not([style*="display: none"])');
                checkboxes.forEach(cb => cb.checked = selectAll.checked);
            });

            productList.addEventListener('change', (e) => {
                if (e.target.classList.contains('product-checkbox')) {
                    updateSelectAll();
                }
            });

            // Initialize
            updateSelectAll();
        });
    </script>
    <style>
        .card {
            border-radius: 0.5rem;
        }

        .form-control, .form-select, .btn {
            border-radius: 0.375rem;
        }

        .form-label {
            margin-bottom: 0.25rem;
            font-size: 0.9rem;
        }

        .form-text {
            font-size: 0.85rem;
        }

        .border.rounded {
            border-color: #dee2e6 !important;
        }

        .text-truncate {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .alert-dismissible {
            border-radius: 0.375rem;
        }
    </style>
}